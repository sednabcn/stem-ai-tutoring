name: Fetch News Daily

on:
  workflow_dispatch:
    inputs:
      news_category:
        description: 'News category (e.g., science, world)'
        required: false
        default: 'science'
      page_size:
        description: 'Number of articles'
        required: false
        default: '5'
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC

jobs:
  fetch-process-display:
    runs-on: ubuntu-latest

    env:
      DEFAULT_CATEGORY: 'science'
      DEFAULT_PAGE_SIZE: '5'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Determine Inputs or Defaults
        id: input-vars
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "category=${{ github.event.inputs.news_category || env.DEFAULT_CATEGORY }}" >> "$GITHUB_OUTPUT"
            echo "pagesize=${{ github.event.inputs.page_size || env.DEFAULT_PAGE_SIZE }}" >> "$GITHUB_OUTPUT"
          else
            echo "category=${{ env.DEFAULT_CATEGORY }}" >> "$GITHUB_OUTPUT"
            echo "pagesize=${{ env.DEFAULT_PAGE_SIZE }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Fetch Latest News JSON from NewsAPI
        run: |
          curl -s "https://newsapi.org/v2/top-headlines?country=us&category=${{ steps.input-vars.outputs.category }}&pageSize=${{ steps.input-vars.outputs.pagesize }}&apiKey=${{ secrets.THENEWSAPI_KEY }}" \
          -o data/news.json || echo "‚ö†Ô∏è Fetch failed, will fallback in processing"

      - name: Run newsgen.py
        run: python .github/scripts/newsgen.py || echo "‚ö†Ô∏è newsgen.py failed"

      - name: Run display-news.py to generate display output
        run: |
	    python .github/scripts/display-news.py || echo "‚ö†Ô∏è display-news.py failed"

      - name: Run display-news.py to generate HTML
        run: |
	    python .github/scripts/display-news.py

      - name: Commit and Push Updated News & Display Output
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add data/news.json
          git add data/news.html  # <-- Replace with actual output file(s) from display-news-html.py
          git diff --cached --quiet || (git commit -m "üì∞ Auto-update news and display output" && git push)
